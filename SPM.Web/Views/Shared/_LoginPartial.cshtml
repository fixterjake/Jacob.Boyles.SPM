@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link text-light" asp-controller="User" asp-action="Index">Dashboard</a>
    </li>
    @if (User.IsInRole("Administrator") || User.IsInRole("Maintainer"))
    {
        <li class="nav-item">
            <a  class="nav-link text-light" asp-controller="Admin" asp-action="EditRoles">Edit User Roles</a>
        </li>
    }
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-light"> <i class="fas fa-sign-out-alt"></i> Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register"><i class="fas fa-plus-square"></i> Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login"><i class="fas fa-sign-in-alt"></i> Login</a>
    </li>
}
</ul>
